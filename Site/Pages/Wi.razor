@page "/Wi"
@using Site.Data
@using Site.Data.Model
@inject WorkitemService workitemservice
@inject NavigationManager NavigationManager

<PageTitle>Workitem</PageTitle>

<form>
  ID: <input form="ID" class="form-control" @bind="@workitem.ID" /> <br />
  Title: <input form="Title" class="form-control" @bind="@workitem.Title" /> <br />
  Description: <input form="Description" class="form-control" @bind="@workitem.Description" /> <br />
  <input type="button" class="btn btn-primary" @onclick="@CreateWorkitem" value="Save"/>
</form>

<h1>Employee Info</h1>
@if (workitems is null)
{
    <p><em>Loading... !</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in workitems)
      {
        <tr key=@item.ID>
          <td>@item.ID</td>
          <td>@item.Title</td>
          <td>@item.Description</td>
        </tr>
      }
    </tbody>
  </table>
}


@code {
    List<Workitem>? workitems;
    protected override async Task OnInitializedAsync()
    {
        workitems = await Task.Run(() => workitemservice.GetAllWorkitems());
    }

    Workitem workitem = new();

    protected async void CreateWorkitem() {
        await workitemservice.InsertWorkitem(workitem);
        workitem = new();

        workitems = await Task.Run(() => workitemservice.GetAllWorkitems());
        
        StateHasChanged();
  }
}
