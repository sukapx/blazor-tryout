@page "/Wi"
@using Site.Data
@using Site.Data.Model
@inject WorkitemService workitemservice
@inject NavigationManager NavigationManager

<PageTitle>Workitem</PageTitle>

<EditForm Model="@workitem" OnValidSubmit="@CreateWorkitem">
  <DataAnnotationsValidator />
  <ValidationSummary />

  <p>
    <label>
      ID:
      <InputNumber id="ID" class="form-control" @bind-Value="workitem.ID" />
    </label>
  </p>
  <p>
    <label>
      Title:
      <InputText id="Title" class="form-control" @bind-Value="workitem.Title" />
    </label>
  </p>
  <p>
    <label>
      Description:
      <InputTextArea id="Description" class="form-control" @bind-Value="workitem.Description" />
    </label>
  </p>
  <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h1>Employee Info</h1>
@if (workitems is null)
{
    <p><em>Loading... !</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in workitems)
      {
        <tr key=@item.ID>
          <td>@item.ID</td>
          <td>@item.Title</td>
          <td>@item.Description</td>
        </tr>
      }
    </tbody>
  </table>
}


@code {
  private List<Workitem>? workitems;
  private Workitem workitem = new();

  protected override async Task OnInitializedAsync()
  {
    workitems = await Task.Run(() => workitemservice.GetAllWorkitems());
  }

  protected async Task CreateWorkitem() {
    workitem.Creation = DateTime.UtcNow;
    workitem.LastChange = DateTime.UtcNow;
    await workitemservice.InsertWorkitem(workitem);
    workitem = new();

    workitems = await Task.Run(() => workitemservice.GetAllWorkitems());
    
    StateHasChanged();
  }
}
